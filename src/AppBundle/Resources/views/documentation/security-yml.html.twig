{% extends '@App/layout.html.twig' %}

{% block title %}Documentation{% endblock %}


{% block body %}

    <div class="container">
        <h1><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml">Security Yml File</a></h1>


        <p>
            Symfony uses the security.yml file to configure security.  Symfony divides security into authentication and authorization.  Authentication
            is the basically who you are.  Authorization is do you have access.
        </p>

        <h3>Basic Definitions:</h3>

        <ul>
            <li>User Provider: A class / way to fetch a user.  Does not have to be from a database aka a facebook user provider.</li>
            <li>Encoders:  Basic methods for encoding the password.</li>
            <li>Firewalls:  Defines an area of the site and all authentication is configured and handled by it.</li>
            <li>Guards: A way of authenticating user.  We can implement an interface or extend a class to create our own custom authentiators. .</li>
            <li>Roles: A way of giving access to certain users roles are defined in hierarchical way.  Meaning a ROLE_USER is a ROLE_ADMIN.</li>
        </ul>

        <h3><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml#L12-L12">Default User Provider</a></h3>
        <p>
            We only allow people to use email for login. Which is why our our getUsername on User entity returns the email.
            This is called by the symfony default user provider. The reason I feel that email only login is better is
            that emails are unique and if you ever have to merge your database
            with another it will be a lot easier to merge on emails for accounts. The default user provider is setup
            here.
        </p>

        <h3><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml#L5">
                Password Encoder
            </a>
        </h3>

        <p>All users are encrypted using bcrypt password encoder. This is why getSalt on the user returns null.
            It's is not required for bcrypt passwords.
        </p>

        <h3><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml#L47">Desktop Firewall Setup</a></h3>

        <p>The desktop firewall is at the bottom because firewalls are first come first serve.  Thus if it is an api request it will not hit the desktop firewall.
        </p>
        <p>
            This uses the standard form_login and a guard for authenticating facebook & google users.  Guards allow us to roll out our own authentication.
        </p>

        <h3><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml#L38">Api Firewall</a></h3>

        <p>The api firewall uses one guard to check the header of http request.  If the header has Authorization with the bearer token it will attempt to authenticate.</p>

        <h3><a href="https://github.com/phptuts/symfonystarter/blob/master/app/config/security.yml#L28">Api Login Guard</a></h3>

        <p>This firewall has 2 guard and one entry point.  This means that it will try to use the guard in teh entry point first and if that can't find the credentials in the request it will go to the next guard.
            So we first look for a email /password, then for a token.
        </p>
    </div>

{% endblock %}