{% extends '@App/documentation/document-layout.html.twig' %}

{% block title 'Api Login Guard' %}

{% block content %}
<div class="container">

    <h1>
        <a href="https://github.com/phptuts/symfonystarter/blob/master/src/AppBundle/Security/Guard/ApiLoginGuard.php">
            Api Login Guard
        </a>
    </h1>

    <p>Used to login someone in using their email and password.  Sets are pretty basic.</p>

    <ol>
        <li>
            <h5>
               1) Check Credentials
            </h5>
            <blockquote>
                The api login guard expects a json request with email and password in the request.  The request must be post as well.
                If it finds all that is true it will send an array of <code>["email": "asdfasfd@asdf.com", "password": "*******"]</code>
                To get Credentials
            </blockquote>
        </li>
        <li>
            <h5>
                2) getUser
            </h5>
            <blockquote>
                This uses are our standard user provider configured in the security.yml.  It will see if a user exists with that email.
                If not it pass the request onto onAuthenticationFailure.
            </blockquote>
        </li>
        <li>
            <h5>
                3) checkCredentials
            </h5>
            <blockquote>
                This will validate the password and make sure it matches.  Return true if it does.
                If not it will pass the request onto onAuthenticationFailure.
            </blockquote>
        </li>
        <li>
            <h5>
                3) onAuthenticationSuccess
            </h5>
            <blockquote>
                This returns a credentialed response to the user so that can use the api authenticated.
                <pre>
                    {
                        "meta": {
                            "type": "credentials",
                            "paginated": false
                        },
                        "data": {
                            "user": {
                                "id": "96430bcc-6987-11e7-9d99-08002732ed09",
                                "displayName": "update_user_e2e",
                                "email": "update_user_e2e@email.com",
                                "bio": null
                            },
                            "tokenModel": {
                                "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyJ9.eyJ1c2VyX2lkIjoiOTY0MzBiY2MtNjk4Ny0xMWU3LTlkOTktMDgwMDI3MzJlZDA5IiwiZXhwIjoxNTA1NDE1ODcxLCJpYXQiOjE1MDAyMzE4NzF9.vKuQmpOFPneh38vFnT7BJPqT89gaIq8MEcL4SrDUHvQ8Jpq0z-JVEex8vbSKJFORFwPGnw2X4xWgx-qs39C0T06oknn2fHF-jLOafwjwCRLTDeOyrDT6JX2sNxEirfS1kzvXL_lA74JuZO8g1twmjHiFSlvk2j32ueo9VnZZdisHvYHnl2zy8mgme3A8izKQsgw2UHBsSPy6x4fe80dWnf60Wp5NPZkBRtAPitE4SLktnJEVo93aSzUPVQiDfKPdA4J0zE7UfsmkDIqMflOIZI_CSCuKGJ77q8WWcziH47P_Qv4hF93s19hI9PAb1mMv75LrVc82JrftHyRC_wk_LF1J6al7lcKNWv9paw0VLJVHz-qBRY-LOFwkUzQNMZetXab_VA_FPTeR0itHZDku5Et64clb9_TzFeveQ7Q0W2yakPsFCDK24a1SxTqzVXMKSAiecQK6oFsSTSsDEekKlkrpXshHN3LlQ_OnDAyp-J8Bzl90MAE2VlP-WFEpNnFzH3G6apTkQ31RYNaV6EFC-TOv_rMmKvM9O0E7NezSPEs15jGSVEzd_I5Q44GkEij1mPij-F1pqjvVbbD81_MZZIon8QsS9hTWjCqHUxzAvoSZ_y7nheYGzwzxWc_dz2qN8v1ragbQrLAaUST12TLIAVE22Q_JPhHmI0wQi0u95Kk",
                                "expirationTimeStamp": 1505415871
                            },
                            "refreshTokenModel": {
                                "token": "6fd9225321cc4867ff9c7f77cd748f23ce9a5186e6dbbae4f4a720aab7a7879bb9af60669e1fca45bf0d9a3033ff6f9a07a06c50996fa8406dcff2ecd2ba0955f994aa24d3b667dcf28e24f4d23fda666cf8d7a155ddef701796",
                                "expirationTimeStamp": 1510599871
                            }
                        }
                    }
                </pre>
            </blockquote>
        </li>

    </ol>

    <h3>Start And onAuthenticationFailure</h3>

    <p>
        Start is called when auth is required and no credentials are present.  This will return a 401.
        onAuthenticationFailure is called when authentication fails for whatever reason. This returns a 403.
        For all guards this is the same so it handled in a
        <a href="https://github.com/phptuts/symfonystarter/blob/master/src/AppBundle/Security/Guard/GuardTrait.php">trait</a>.
    </p>

    <h5>Also handled in the trait is the supportsRememberMe which always returns false.  You can't change it here because it's an api, so it has to always return false.</h5>
</div>

{% endblock %}

{% block helpfulLinks %}
    <ul>
        <li><a href="https://symfony.com/doc/current/security/guard_authentication.html">Custom Guard Symfony Doc</a></li>
        <li><a href="https://symfony.com/doc/current/security/multiple_guard_authenticators.html">Multiple Guards</a></li>
        <li><a href="https://github.com/hwi/HWIOAuthBundle">HWIOAuthBundle</a> Does facebook / google and ton more oauth login providers.</li>
        <li><a href="https://github.com/lexik/LexikJWTAuthenticationBundle">JWT Bundle</a> A great bundle that does jwt tokens.</li>
        <li><a href="https://github.com/gesdinet/JWTRefreshTokenBundle">JWT Refresh Token Bundle</a> Works the bundle above to provide refresh tokens.</li>
    </ul>
{% endblock %}